/*
 * This Java source file was generated by the Gradle 'init' task.
 */


import stackQueue.*;

public class App {
    private static final StackLinkedList<Integer> stackList = new StackLinkedList<Integer>();
    private static final pseudoQueue<Integer> pseudoQueueList = new pseudoQueue<>();
    //    private static final QueueLinkedList<Integer> dog = new QueueLinkedList<>();
    private static final AnimalShelter shelterCat = new AnimalShelter();
    private static final AnimalShelter shelterDog = new AnimalShelter();

    public static void main(String[] args) {
//        QueueLinkedList<Integer> queueList = new QueueLinkedList<Integer>();
        Dog dog1 = new Dog("Bobby");
        Dog dog2 = new Dog("Milo");
        Dog dog3 = new Dog("Foxy");
        Cat cat1 = new Cat("Migalo");
        Cat cat2 = new Cat("Lilly");
        shelterDog.enqueue(dog1);
//        System.out.println("Dog1 shelter: "+shelterDog);
        shelterCat.enqueue(cat1);
//        System.out.println("cat1 shelter: "+shelterCat);
        shelterDog.enqueue(dog2);
        shelterDog.enqueue(dog3);
//        System.out.println("Dog2 shelter: "+shelterDog);
//        shelter.enqueue(dog3);
        shelterCat.enqueue(cat2);
//        System.out.println("cat2 shelter: "+shelterCat);
//        Animal animal =shelter.dequeue("cat");
//        System.out.println("Name: "+animal.getName());
        Animal first = shelterDog.dequeue("dog");
        System.out.println("Name: " + first.getName());
        Animal middle = shelterDog.dequeue("dog");
        System.out.println("Name: " + middle.getName());
        Animal last = shelterDog.dequeue("dog");
        System.out.println("Name: " + last.getName());
        Animal noDogs = shelterDog.dequeue("dog");
//        System.out.println("Name: "+noDogs.getName());

        // 1. Stack
//        System.out.println("stackList: " + stackList);
//        stackList.push(10);
//        stackList.push(15);
//        stackList.push(20);
//
//        System.out.println("stackList: " + stackList);
//        System.out.println(stackList.peek());
//        System.out.println("stackList isEmpty: "+ stackList.isEmpty());
//
//        System.out.println("pop 3: " + stackList.pop());
//        System.out.println("pop 2: "+ stackList.pop());
//        System.out.println("pop 1: "+ stackList.pop());
//
//        System.out.println("stackList isEmpty: "+ stackList.isEmpty());
//        System.out.println(stackList.peek());
//
//        // 2. Queue
//        System.out.println(queueList);
//
//        queueList.enqueue(1);
//        queueList.enqueue(2);
//        queueList.enqueue(3);
//
//        System.out.println("Queue list: " + queueList);
//        System.out.println("queueList.isEmpty(): " + queueList.isEmpty());
//
//        System.out.println("dequeue 1: " + queueList.dequeue());
//        System.out.println("dequeue 2: " + queueList.dequeue());
//        System.out.println("dequeue 3: " + queueList.dequeue());
//
//
//        System.out.println("Queue list: " + queueList);
//
//
//        System.out.println("Queue list is empty: " + queueList.isEmpty());
//
//        System.out.println("Queue list peek(): " + queueList.peek());
//
//        System.out.println(pseudoQueueList);
//
//        pseudoQueueList.enqueue(4);
//        pseudoQueueList.enqueue(5);
//        pseudoQueueList.enqueue(6);
//        pseudoQueueList.enqueue(7);
//
//        System.out.println(pseudoQueueList);
//
//        System.out.println("dequeue: " + pseudoQueueList.dequeue());
//
//        System.out.println(pseudoQueueList);


    }
}
